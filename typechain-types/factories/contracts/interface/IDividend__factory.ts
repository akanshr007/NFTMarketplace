/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDividend,
  IDividendInterface,
} from "../../../contracts/interface/IDividend";

const _abi = [
  {
    inputs: [],
    name: "claim_dividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit_dividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_dividendToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_NFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dataAccessAdmin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "trackShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDividend__factory {
  static readonly abi = _abi;
  static createInterface(): IDividendInterface {
    return new utils.Interface(_abi) as IDividendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDividend {
    return new Contract(address, _abi, signerOrProvider) as IDividend;
  }
}
